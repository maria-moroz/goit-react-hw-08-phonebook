{"version":3,"file":"static/js/874.3104d6aa.chunk.js","mappings":"4OAKaA,EAAc,WACzB,IAAMC,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IAErBC,GAAyBC,EAAAA,EAAAA,UAAQ,WACrC,OAAOC,EAAAA,EAAAA,IACL,CAAC,SAAAC,GAAQ,OAAIA,EAASC,MAAM,SAACC,EAAGR,GAAJ,OAAeA,KAC3C,SAACS,EAAUT,GAAY,IAAD,EACpB,wBACES,QADF,IACEA,OADF,EACEA,EAAUT,QAAO,SAAAU,GAAO,OACtBA,EAAQC,KAAKC,cAAcC,SAASb,EAAOY,yBAF/C,QAGO,QAIV,IAEH,OAAOE,EAAAA,EAAAA,SAAoBC,EAAW,CACpCC,iBADoC,SACnBC,GACf,OAAO,kBACFA,GADL,IAEEC,iBAAkBf,EAAuBc,EAAQjB,U,iICxBzD,EAAgC,6DAAhC,EAAqG,4CAArG,EAAyJ,4C,oBCM1I,SAASmB,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,MAEXvB,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IAE3B,OACE,iBAAKsB,UAAWC,EAAhB,WACE,kBAAOC,QAASN,EAAUI,UAAWC,EAArC,sCAGA,kBACEE,KAAK,OACLhB,KAAK,OACLiB,GAAIR,EACJI,UAAWC,EACXI,MAAO7B,EACP8B,aAAa,MACbC,SAAU,SAAAC,GAAC,OAAIV,GAASW,EAAAA,EAAAA,IAAaD,EAAEE,cAAcL,c,oDCzB7D,EAAuB,0BAAvB,EAA2D,6BAA3D,EAAqK,4BCKtJ,SAASM,EAAT,GAAmC,IAAZzB,EAAW,EAAXA,QACpC,GAAuC0B,EAAAA,EAAAA,MAAvC,eAAOC,EAAP,KAAwBC,EAAxB,KAAwBA,UAChBV,EAAqBlB,EAArBkB,GAAIjB,EAAiBD,EAAjBC,KAAM4B,EAAW7B,EAAX6B,OAElB,OACE,gBAAaf,UAAWC,EAAxB,WACE,eAAGD,UAAWC,EAAd,UACGd,EADH,MACU,0BAAO4B,QAEjB,oBACEZ,KAAK,SACLH,UAAWC,EACXe,SAAUF,EACVG,QAAS,kBAAMJ,EAAcT,IAJ/B,WAME,SAAC,MAAD,CAAiBc,KAAK,UACtB,0BAAOJ,EAAY,cAAgB,gBAX9BV,GCVb,MAAuB,0BCGR,SAASe,EAAT,GAAoC,IAAblC,EAAY,EAAZA,SACpC,OACE,eAAIe,UAAWC,EAAf,SACGhB,EAASmC,KAAI,SAAAlC,GAAO,OACnB,SAACyB,EAAD,CAA8BzB,QAASA,GAArBA,EAAQkB,SAMlCe,EAAYE,WAAa,CACvBpC,SAAUqC,IAAAA,QACRA,IAAAA,MAAgB,CACdlB,GAAIkB,IAAAA,OAAAA,cAENC,YClBJ,MAAyB,yBAAzB,EAA2D,yBCK5C,SAASC,IACtB,OAA0DjD,EAAAA,EAAAA,KAAlDmB,EAAR,EAAQA,iBAAkB+B,EAA1B,EAA0BA,MAAOX,EAAjC,EAAiCA,UAAWY,EAA5C,EAA4CA,UACtCC,EAAiBjC,EAAiBkC,OAExC,OACE,iBAAK5B,UAAU,YAAf,WACE,gBAAIA,UAAWC,EAAf,uBACW,0BAAO0B,IADlB,gBAGA,SAAChC,EAAD,IACCmB,IACC,gBAAKd,UAAWC,EAAhB,UACE,SAAC,IAAD,MAGHyB,GAAahC,IACZ,SAACyB,EAAD,CAAalC,SAAUS,IAExB+B,IAAS,cAAGzB,UAAU,QAAb,yD","sources":["hooks/useContacts.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { useSelector } from 'react-redux';\nimport { createSelector } from '@reduxjs/toolkit';\nimport { useMemo } from 'react';\nimport { useGetContactsQuery } from 'redux/contacts/contactsApi';\nimport { getContactsFilter } from 'redux/filterSlice';\nexport const useContacts = () => {\n  const filter = useSelector(getContactsFilter);\n\n  const selectFilteredContacts = useMemo(() => {\n    return createSelector(\n      [response => response.data, (_, filter) => filter],\n      (contacts, filter) => {\n        return (\n          contacts?.filter(contact =>\n            contact.name.toLowerCase().includes(filter.toLowerCase())\n          ) ?? []\n        );\n      }\n    );\n  }, []);\n\n  return useGetContactsQuery(undefined, {\n    selectFromResult(result) {\n      return {\n        ...result,\n        filteredContacts: selectFilteredContacts(result, filter),\n      };\n    },\n  });\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"Filter_formContainer__dsfli form_formFieldContainer__QNPAE\",\"label\":\"Filter_label__vEd1E form_formLabel__2fPCE\",\"input\":\"Filter_input__N7T3z form_formInput__87kxd\"};","import { nanoid } from 'nanoid';\nimport { updateFilter, getContactsFilter } from 'redux/filterSlice';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport s from './Filter.module.css';\nimport 'styles/form.css';\n\nexport default function Filter() {\n  const filterId = nanoid();\n\n  const dispatch = useDispatch();\n\n  const filter = useSelector(getContactsFilter);\n\n  return (\n    <div className={s.formContainer}>\n      <label htmlFor={filterId} className={s.label}>\n        Search contacts by name\n      </label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        id={filterId}\n        className={s.input}\n        value={filter}\n        autoComplete=\"off\"\n        onChange={e => dispatch(updateFilter(e.currentTarget.value))}\n      />\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactItem_item__gxreB\",\"contact\":\"ContactItem_contact__C4k7V\",\"name\":\"ContactItem_name__XjpNK\",\"phone\":\"ContactItem_phone__Q4h3y\",\"button\":\"ContactItem_button__IRFBz\"};","import { useDeleteContactMutation } from 'redux/contacts/contactsApi';\nimport { AiOutlineDelete } from 'react-icons/ai';\nimport PropTypes from 'prop-types';\n\nimport s from './ContactItem.module.css';\n\nexport default function ContactItem({ contact }) {\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n  const { id, name, number } = contact;\n\n  return (\n    <li key={id} className={s.item}>\n      <p className={s.contact}>\n        {name}: <span>{number}</span>\n      </p>\n      <button\n        type=\"button\"\n        className={s.button}\n        disabled={isLoading}\n        onClick={() => deleteContact(id)}\n      >\n        <AiOutlineDelete size=\"20px\" />\n        <span>{isLoading ? 'Deleting...' : 'Delete'}</span>\n      </button>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","import PropTypes from 'prop-types';\nimport ContactItem from 'components/ContactItem/ContactItem';\nimport s from './ContactList.module.css';\n\nexport default function ContactList({ contacts }) {\n  return (\n    <ul className={s.list}>\n      {contacts.map(contact => (\n        <ContactItem key={contact.id} contact={contact} />\n      ))}\n    </ul>\n  );\n}\n\nContactList.protoTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"Contacts_header__WHW8f\",\"loader\":\"Contacts_loader__VcRwP\"};","import { useContacts } from 'hooks/useContacts';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport s from './Contacts.module.css';\n\nexport default function Contacts() {\n  const { filteredContacts, error, isLoading, isSuccess } = useContacts();\n  const contactsNumber = filteredContacts.length;\n\n  return (\n    <div className=\"container\">\n      <h1 className={s.header}>\n        You have <span>{contactsNumber}</span> contacts\n      </h1>\n      <Filter />\n      {isLoading && (\n        <div className={s.loader}>\n          <ClipLoader />\n        </div>\n      )}\n      {isSuccess && filteredContacts && (\n        <ContactList contacts={filteredContacts} />\n      )}\n      {error && <p className=\"error\">Sorry, we can't find your contacts :( </p>}\n    </div>\n  );\n}\n"],"names":["useContacts","filter","useSelector","getContactsFilter","selectFilteredContacts","useMemo","createSelector","response","data","_","contacts","contact","name","toLowerCase","includes","useGetContactsQuery","undefined","selectFromResult","result","filteredContacts","Filter","filterId","nanoid","dispatch","useDispatch","className","s","htmlFor","type","id","value","autoComplete","onChange","e","updateFilter","currentTarget","ContactItem","useDeleteContactMutation","deleteContact","isLoading","number","disabled","onClick","size","ContactList","map","protoTypes","PropTypes","isRequired","Contacts","error","isSuccess","contactsNumber","length"],"sourceRoot":""}